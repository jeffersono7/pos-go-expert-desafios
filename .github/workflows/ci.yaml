name: Pos go expert CI

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

env:
  GCP_PROJECT: pos-go-expert-jeff
  GCP_REGION: us-east1
  AR_REPOSITORY: weather-cep
  IMAGE_NAME: weather
  SERVICE_NAME: weather

jobs:
  changes:
    runs-on: ubuntu-latest
    outputs:
      labs_desafios_weather_cep: ${{ steps.filter.outputs.labs_desafios_weather_cep }}
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 100
      - uses: dorny/paths-filter@v2
        id: filter
        with:
          filters: |
            labs_desafios_weather_cep:
              - 'labs/desafios/weather-cep/**'

  test-labs_desafios_weather_cep:
    needs: changes
    if: needs.changes.outputs.labs_desafios_weather_cep == 'true'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-go@v4
        with:
          go-version: "1.23"
      - run: cd labs/desafios/weather-cep && go test ./...
  build-labs_desafios_weather_cep:
    needs: test-labs_desafios_weather_cep
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: authenticate to google cloud
        uses: google-github-actions/auth@v2
        with:
          credentials_json: ${{ secrets.GCP_SA_KEY }}

      - name: set up google cloud sdk
        uses: google-github-actions/setup-gcloud@v2

      - name: configure docker to artifact registry
        run: |
          gcloud auth configure-docker $GCP_REGION-docker.pkg.dev

      - name: build docker image
        run: |
          SHORT_SHA="${GITHUB_SHA:0:7}"
          cd labs/desafios/weather-cep
          docker build -f build/Dockerfile -t $GCP_REGION-docker.pkg.dev/$GCP_PROJECT/$AR_REPOSITORY/$IMAGE_NAME:${SHORT_SHA} .

      - name: push docker image
        run: |
          SHORT_SHA="${GITHUB_SHA:0:7}"
          TAG="$GCP_REGION-docker.pkg.dev/$GCP_PROJECT/$AR_REPOSITORY/$IMAGE_NAME:${SHORT_SHA}"

          echo "Pushing image with tag: $SHORT_SHA"
          docker push $TAG
          echo "IMAGE_URL=$TAG" >> $GITHUB_ENV
  deploy-labs_desafios_weather_cep:
    runs-on: ubuntu-latest
    needs: build-labs_desafios_weather_cep
    steps:
      - name: authenticate to google cloud
        uses: google-github-actions/auth@v2
        with:
          credentials_json: ${{ secrets.GCP_SA_KEY }}
      - name: set up gcloud sdk
        uses: google-github-actions/setup-gcloud@v2
      
      - name: deploy to cloud run
        run: |
          gcloud run deploy $SERVICE_NAME \
            --image ${{ env.IMAGE_URL }} \
            --region $GCP_REGION \
            --platform managed \
            --allow-unauthenticated
